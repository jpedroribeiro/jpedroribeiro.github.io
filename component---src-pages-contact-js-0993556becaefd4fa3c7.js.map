{"version":3,"file":"component---src-pages-contact-js-0993556becaefd4fa3c7.js","mappings":"4LAGoC,IAI9BA,EAAW,YACf,WAAYC,GAAQ,IAAD,EAKf,OAJF,cAAMA,IAAM,MACPC,WAAa,EAAKA,WAAWC,MAAK,WACvC,EAAKC,MAAQ,CACXC,OAAQ,IACR,CACJ,EAPe,YAOd,kBA4DA,OA5DA,EAEDC,OAAA,WACE,MACEC,MACEC,MACEC,cAAc,MAAEC,MAGlBC,KAAKV,OACH,OAAEI,GAAWM,KAAKP,MAIxB,OACE,gBAAC,IAAM,CAACQ,SAAUD,KAAKV,MAAMW,SAAUF,MAAOA,GAC5C,gBAAC,IAAG,CAACA,MAJM,eAKX,gDACA,wBACEG,SAAUF,KAAKT,WACfY,OAAO,gCACPC,OAAO,OACPC,UAAW,WAEX,yBAAOC,QAAS,QAAO,SACvB,yBAAOC,KAAK,OAAOC,KAAK,OAAOC,UAAQ,IACvC,yBAAOH,QAAS,SAAQ,UACxB,yBAAOC,KAAK,QAAQC,KAAK,QAAQC,UAAQ,IACzC,yBAAOH,QAAS,WAAU,YAC1B,4BAAUE,KAAK,UAAUE,KAAM,EAAGD,UAAQ,IAC9B,YAAXf,EACC,qBAAGW,UAAW,WAAU,WAExB,wCAEU,UAAXX,GACC,qBAAGW,UAAW,SAAQ,+BAKhC,EAAC,EAEDd,WAAA,SAAWoB,GACTA,EAAGC,iBACH,MAAMC,EAAOF,EAAGG,OACVlB,EAAO,IAAImB,SAASF,GACpBG,EAAM,IAAIC,eAChBD,EAAIE,KAAKL,EAAKT,OAAQS,EAAKV,QAC3Ba,EAAIG,iBAAiB,SAAU,oBAC/BH,EAAII,mBAAqB,KACnBJ,EAAIK,aAAeJ,eAAeK,OACnB,MAAfN,EAAItB,QACNmB,EAAKU,QACLvB,KAAKwB,SAAS,CAAE9B,OAAQ,aAExBM,KAAKwB,SAAS,CAAE9B,OAAQ,UAC1B,EAEFsB,EAAIS,KAAK7B,EACX,EAAC,EAnEc,CAAS8B,EAAAA,WAsE1B,W","sources":["webpack://gatsby-starter-blog/./src/pages/contact.js"],"sourcesContent":["import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nimport { graphql } from \"gatsby\";\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\",\n    };\n  }\n\n  render() {\n    const {\n      data: {\n        site: {\n          siteMetadata: { title },\n        },\n      },\n    } = this.props;\n    const { status } = this.state;\n\n    const thisTitle = `Contact Me`;\n\n    return (\n      <Layout location={this.props.location} title={title}>\n        <Seo title={thisTitle} />\n        <h1>Send your message:</h1>\n        <form\n          onSubmit={this.submitForm}\n          action=\"https://formspree.io/xeqpqqor\"\n          method=\"POST\"\n          className={\"contact\"}\n        >\n          <label htmlFor={\"name\"}>Name:</label>\n          <input type=\"text\" name=\"name\" required />\n          <label htmlFor={\"email\"}>Email:</label>\n          <input type=\"email\" name=\"email\" required />\n          <label htmlFor={\"message\"}>Message:</label>\n          <textarea name=\"message\" rows={5} required />\n          {status === \"SUCCESS\" ? (\n            <p className={\"success\"}>Thanks!</p>\n          ) : (\n            <button>Submit</button>\n          )}\n          {status === \"ERROR\" && (\n            <p className={\"error\"}>Ooops! There was an error.</p>\n          )}\n        </form>\n      </Layout>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}\n\nexport default ContactPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"names":["ContactPage","props","submitForm","bind","state","status","render","data","site","siteMetadata","title","this","location","onSubmit","action","method","className","htmlFor","type","name","required","rows","ev","preventDefault","form","target","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","React"],"sourceRoot":""}