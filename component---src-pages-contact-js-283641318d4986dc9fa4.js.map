{"version":3,"sources":["webpack:///./src/pages/contact.js"],"names":["ContactPage","props","submitForm","bind","state","status","render","title","this","data","site","siteMetadata","location","onSubmit","action","method","className","type","name","required","rows","ev","preventDefault","form","target","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","React","Component","pageQuery"],"mappings":"mMAOMA,E,oBACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,WAAa,EAAKA,WAAWC,K,yHAAhB,KAClB,EAAKC,MAAQ,CACXC,OAAQ,IAJO,E,kHAQnBC,OAAA,WAAU,IAIcC,EAGlBC,KAAKP,MALPQ,KACEC,KACEC,aAAgBJ,MAIdF,EAAWG,KAAKJ,MAAhBC,OAIR,OACE,kBAAC,IAAD,CAAQO,SAAUJ,KAAKP,MAAMW,SAAUL,MAAOA,GAC5C,kBAAC,IAAD,CAAKA,MAJM,eAKX,kDACA,0BACEM,SAAUL,KAAKN,WACfY,OAAO,gCACPC,OAAO,OACPC,UAAW,WAEX,wCACA,2BAAOC,KAAK,OAAOC,KAAK,OAAOC,UAAQ,IACvC,yCACA,2BAAOF,KAAK,QAAQC,KAAK,QAAQC,UAAQ,IACzC,2CACA,8BAAUD,KAAK,UAAUE,KAAM,EAAGD,UAAQ,IAC9B,YAAXd,EACC,uBAAGW,UAAW,WAAd,WAEA,0CAEU,UAAXX,GACC,uBAAGW,UAAW,SAAd,iC,EAOVd,WAAA,SAAWmB,GAAK,IAAD,OACbA,EAAGC,iBACH,IAAMC,EAAOF,EAAGG,OACVf,EAAO,IAAIgB,SAASF,GACpBG,EAAM,IAAIC,eAChBD,EAAIE,KAAKL,EAAKR,OAAQQ,EAAKT,QAC3BY,EAAIG,iBAAiB,SAAU,oBAC/BH,EAAII,mBAAqB,WACnBJ,EAAIK,aAAeJ,eAAeK,OACnB,MAAfN,EAAIrB,QACNkB,EAAKU,QACL,EAAKC,SAAS,CAAE7B,OAAQ,aAExB,EAAK6B,SAAS,CAAE7B,OAAQ,YAG5BqB,EAAIS,KAAK1B,I,GAlEa2B,IAAMC,WAsEjBrC,YAER,IAAMsC,EAAS","file":"component---src-pages-contact-js-283641318d4986dc9fa4.js","sourcesContent":["import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport { graphql } from \"gatsby\";\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\",\n    };\n  }\n\n  render() {\n    const {\n      data: {\n        site: {\n          siteMetadata: { title },\n        },\n      },\n    } = this.props;\n    const { status } = this.state;\n\n    const thisTitle = `Contact Me`;\n\n    return (\n      <Layout location={this.props.location} title={title}>\n        <SEO title={thisTitle} />\n        <h1>Send your message:</h1>\n        <form\n          onSubmit={this.submitForm}\n          action=\"https://formspree.io/xeqpqqor\"\n          method=\"POST\"\n          className={\"contact\"}\n        >\n          <label>Name:</label>\n          <input type=\"text\" name=\"name\" required />\n          <label>Email:</label>\n          <input type=\"email\" name=\"email\" required />\n          <label>Message:</label>\n          <textarea name=\"message\" rows={5} required />\n          {status === \"SUCCESS\" ? (\n            <p className={\"success\"}>Thanks!</p>\n          ) : (\n            <button>Submit</button>\n          )}\n          {status === \"ERROR\" && (\n            <p className={\"error\"}>Ooops! There was an error.</p>\n          )}\n        </form>\n      </Layout>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}\n\nexport default ContactPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}