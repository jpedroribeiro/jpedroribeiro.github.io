{"version":3,"file":"component---src-pages-contact-js-7dfb7bdaafc9cebd87d9.js","mappings":"2LAGoC,IAI9BA,EAAW,SAAAC,GACf,SAAAD,EAAYE,GAAQ,IAADC,EAKf,OAJFA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,WAAaF,EAAKE,WAAWC,MAAIC,EAAAA,EAAAA,GAAAJ,IACtCA,EAAKK,MAAQ,CACXC,OAAQ,IACRN,CACJ,EAPeO,EAAAA,EAAAA,GAAAV,EAAAC,GAOd,IAAAU,EAAAX,EAAAY,UA4DA,OA5DAD,EAEDE,OAAA,WACE,MACEC,MACEC,MACEC,cAAc,MAAEC,MAGlBC,KAAKhB,OACH,OAAEO,GAAWS,KAAKV,MAIxB,OACEW,EAAAA,cAACC,EAAAA,EAAM,CAACC,SAAUH,KAAKhB,MAAMmB,SAAUJ,MAAOA,GAC5CE,EAAAA,cAACG,EAAAA,EAAG,CAACL,MAJM,eAKXE,EAAAA,cAAA,UAAI,sBACJA,EAAAA,cAAA,QACEI,SAAUL,KAAKb,WACfmB,OAAO,gCACPC,OAAO,OACPC,UAAW,WAEXP,EAAAA,cAAA,SAAOQ,QAAS,QAAQ,SACxBR,EAAAA,cAAA,SAAOS,KAAK,OAAOC,KAAK,OAAOC,UAAQ,IACvCX,EAAAA,cAAA,SAAOQ,QAAS,SAAS,UACzBR,EAAAA,cAAA,SAAOS,KAAK,QAAQC,KAAK,QAAQC,UAAQ,IACzCX,EAAAA,cAAA,SAAOQ,QAAS,WAAW,YAC3BR,EAAAA,cAAA,YAAUU,KAAK,UAAUE,KAAM,EAAGD,UAAQ,IAC9B,YAAXrB,EACCU,EAAAA,cAAA,KAAGO,UAAW,WAAW,WAEzBP,EAAAA,cAAA,cAAQ,UAEE,UAAXV,GACCU,EAAAA,cAAA,KAAGO,UAAW,SAAS,+BAKjC,EAACf,EAEDN,WAAA,SAAW2B,GACTA,EAAGC,iBACH,MAAMC,EAAOF,EAAGG,OACVrB,EAAO,IAAIsB,SAASF,GACpBG,EAAM,IAAIC,eAChBD,EAAIE,KAAKL,EAAKT,OAAQS,EAAKV,QAC3Ba,EAAIG,iBAAiB,SAAU,oBAC/BH,EAAII,mBAAqB,KACnBJ,EAAIK,aAAeJ,eAAeK,OACnB,MAAfN,EAAI5B,QACNyB,EAAKU,QACL1B,KAAK2B,SAAS,CAAEpC,OAAQ,aAExBS,KAAK2B,SAAS,CAAEpC,OAAQ,UAC1B,EAEF4B,EAAIS,KAAKhC,EACX,EAACd,CAAA,CAnEc,CAASmB,EAAAA,WAsE1B,W","sources":["webpack://gatsby-starter-blog/./src/pages/contact.js"],"sourcesContent":["import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nimport { graphql } from \"gatsby\";\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\",\n    };\n  }\n\n  render() {\n    const {\n      data: {\n        site: {\n          siteMetadata: { title },\n        },\n      },\n    } = this.props;\n    const { status } = this.state;\n\n    const thisTitle = `Contact Me`;\n\n    return (\n      <Layout location={this.props.location} title={title}>\n        <Seo title={thisTitle} />\n        <h1>Send your message:</h1>\n        <form\n          onSubmit={this.submitForm}\n          action=\"https://formspree.io/xeqpqqor\"\n          method=\"POST\"\n          className={\"contact\"}\n        >\n          <label htmlFor={\"name\"}>Name:</label>\n          <input type=\"text\" name=\"name\" required />\n          <label htmlFor={\"email\"}>Email:</label>\n          <input type=\"email\" name=\"email\" required />\n          <label htmlFor={\"message\"}>Message:</label>\n          <textarea name=\"message\" rows={5} required />\n          {status === \"SUCCESS\" ? (\n            <p className={\"success\"}>Thanks!</p>\n          ) : (\n            <button>Submit</button>\n          )}\n          {status === \"ERROR\" && (\n            <p className={\"error\"}>Ooops! There was an error.</p>\n          )}\n        </form>\n      </Layout>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}\n\nexport default ContactPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"names":["ContactPage","_React$Component","props","_this","call","submitForm","bind","_assertThisInitialized","state","status","_inheritsLoose","_proto","prototype","render","data","site","siteMetadata","title","this","React","Layout","location","Seo","onSubmit","action","method","className","htmlFor","type","name","required","rows","ev","preventDefault","form","target","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send"],"sourceRoot":""}