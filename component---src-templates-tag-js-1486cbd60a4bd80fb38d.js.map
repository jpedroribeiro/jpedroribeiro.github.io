{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["TagTemplate","props","pageContext","data","tag","allMarkdownRemark","edges","totalCount","title","site","siteMetadata","tagHeader","thisTitle","location","map","node","slug","fields","frontmatter","key","to","pageQuery"],"mappings":"2FAAA,8GA2CeA,UAtCK,SAAAC,GAAU,IACpBC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACbC,EAAQF,EAARE,IAFmB,EAGGD,EAAKE,kBAA3BC,EAHmB,EAGnBA,MAAOC,EAHY,EAGZA,WAEGC,EACdL,EAAKM,KADPC,aAAgBF,MAEZG,EAAeJ,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAGTQ,EAAS,QAAWR,EAE1B,OACE,kBAAC,IAAD,CAAQS,SAAQ,QAAUT,EAAV,IAAkBI,MAAOA,GACvC,kBAAC,IAAD,CAAKA,MAAOI,IACZ,4BAAKD,GACL,4BACGL,EAAMQ,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAR,EAAUO,EAAKG,YAAfV,MACR,OACE,wBAAIW,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAIJ,GAAOR,QASzB,kBAAC,OAAD,CAAMY,GAAG,UAAT,YACA,6BACA,+BAOC,IAAMC,EAAS","file":"component---src-templates-tag-js-1486cbd60a4bd80fb38d.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst TagTemplate = props => {\n  const { pageContext, data } = props;\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const {\n    siteMetadata: { title },\n  } = data.site;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`;\n  const thisTitle = `Tag: ${tag}`;\n\n  return (\n    <Layout location={`/tag/${tag}/`} title={title}>\n      <SEO title={thisTitle} />\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields;\n          const { title } = node.frontmatter;\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n      {/*\n              This links to a page that does not yet exist.\n              We'll come back to it!\n            */}\n      <Link to=\"/tags/\">All tags</Link>\n      <br />\n      <br />\n    </Layout>\n  );\n};\n\nexport default TagTemplate;\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}