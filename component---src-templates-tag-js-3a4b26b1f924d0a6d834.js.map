{"version":3,"file":"component---src-templates-tag-js-3a4b26b1f924d0a6d834.js","mappings":"kLA2CA,UAtCoBA,IAClB,MAAM,YAAEC,EAAW,KAAEC,GAASF,GACxB,IAAEG,GAAQF,GACV,MAAEG,EAAK,WAAEC,GAAeH,EAAKI,mBAEjCC,cAAc,MAAEC,IACdN,EAAKO,KACHC,EAAeL,EAAU,SACd,IAAfA,EAAmB,GAAK,KAAG,iBACZF,EAAG,IACdQ,EAAS,QAAWR,EAE1B,OACE,gBAAC,IAAM,CAACS,SAAQ,QAAUT,EAAG,IAAKK,MAAOA,GACvC,gBAAC,IAAG,CAACA,MAAOG,IACZ,0BAAKD,GACL,0BACGN,EAAMS,KAAI,IAAe,IAAd,KAAEC,GAAM,EAClB,MAAM,KAAEC,GAASD,EAAKE,QAChB,MAAER,GAAUM,EAAKG,YACvB,OACE,sBAAIC,IAAKH,GACP,gBAAC,EAAAI,KAAI,CAACC,GAAIL,GAAOP,GACd,KAQX,gBAAC,EAAAW,KAAI,CAACC,GAAG,UAAQ,YACjB,2BACA,2BACO,C","sources":["webpack://gatsby-starter-blog/./src/templates/tag.js"],"sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst TagTemplate = props => {\n  const { pageContext, data } = props;\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const {\n    siteMetadata: { title },\n  } = data.site;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`;\n  const thisTitle = `Tag: ${tag}`;\n\n  return (\n    <Layout location={`/tag/${tag}/`} title={title}>\n      <Seo title={thisTitle} />\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields;\n          const { title } = node.frontmatter;\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n      {/*\n              This links to a page that does not yet exist.\n              We'll come back to it!\n            */}\n      <Link to=\"/tags/\">All tags</Link>\n      <br />\n      <br />\n    </Layout>\n  );\n};\n\nexport default TagTemplate;\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: {frontmatter: {date: DESC}}\n      filter: {frontmatter: {tags: {in: [$tag]}}}\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["props","pageContext","data","tag","edges","totalCount","allMarkdownRemark","siteMetadata","title","site","tagHeader","thisTitle","location","map","node","slug","fields","frontmatter","key","Link","to"],"sourceRoot":""}